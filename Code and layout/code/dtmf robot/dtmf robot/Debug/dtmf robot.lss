
dtmf robot.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000000c6  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .stab         000006cc  00000000  00000000  0000011c  2**2
                  CONTENTS, READONLY, DEBUGGING
  2 .stabstr      00000085  00000000  00000000  000007e8  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_aranges 00000080  00000000  00000000  00000870  2**3
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_info   0000032a  00000000  00000000  000008f0  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_abbrev 00000099  00000000  00000000  00000c1a  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_line   00000296  00000000  00000000  00000cb3  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_frame  00000024  00000000  00000000  00000f4c  2**2
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_str    000000b1  00000000  00000000  00000f70  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	12 c0       	rjmp	.+36     	; 0x26 <__ctors_end>
   2:	2c c0       	rjmp	.+88     	; 0x5c <__bad_interrupt>
   4:	2b c0       	rjmp	.+86     	; 0x5c <__bad_interrupt>
   6:	2a c0       	rjmp	.+84     	; 0x5c <__bad_interrupt>
   8:	29 c0       	rjmp	.+82     	; 0x5c <__bad_interrupt>
   a:	28 c0       	rjmp	.+80     	; 0x5c <__bad_interrupt>
   c:	27 c0       	rjmp	.+78     	; 0x5c <__bad_interrupt>
   e:	26 c0       	rjmp	.+76     	; 0x5c <__bad_interrupt>
  10:	25 c0       	rjmp	.+74     	; 0x5c <__bad_interrupt>
  12:	24 c0       	rjmp	.+72     	; 0x5c <__bad_interrupt>
  14:	23 c0       	rjmp	.+70     	; 0x5c <__bad_interrupt>
  16:	22 c0       	rjmp	.+68     	; 0x5c <__bad_interrupt>
  18:	21 c0       	rjmp	.+66     	; 0x5c <__bad_interrupt>
  1a:	20 c0       	rjmp	.+64     	; 0x5c <__bad_interrupt>
  1c:	1f c0       	rjmp	.+62     	; 0x5c <__bad_interrupt>
  1e:	1e c0       	rjmp	.+60     	; 0x5c <__bad_interrupt>
  20:	1d c0       	rjmp	.+58     	; 0x5c <__bad_interrupt>
  22:	1c c0       	rjmp	.+56     	; 0x5c <__bad_interrupt>
  24:	1b c0       	rjmp	.+54     	; 0x5c <__bad_interrupt>

00000026 <__ctors_end>:
  26:	11 24       	eor	r1, r1
  28:	1f be       	out	0x3f, r1	; 63
  2a:	cf e5       	ldi	r28, 0x5F	; 95
  2c:	d4 e0       	ldi	r29, 0x04	; 4
  2e:	de bf       	out	0x3e, r29	; 62
  30:	cd bf       	out	0x3d, r28	; 61

00000032 <__do_copy_data>:
  32:	10 e0       	ldi	r17, 0x00	; 0
  34:	a0 e6       	ldi	r26, 0x60	; 96
  36:	b0 e0       	ldi	r27, 0x00	; 0
  38:	e6 ec       	ldi	r30, 0xC6	; 198
  3a:	f0 e0       	ldi	r31, 0x00	; 0
  3c:	02 c0       	rjmp	.+4      	; 0x42 <__SREG__+0x3>
  3e:	05 90       	lpm	r0, Z+
  40:	0d 92       	st	X+, r0
  42:	a0 36       	cpi	r26, 0x60	; 96
  44:	b1 07       	cpc	r27, r17
  46:	d9 f7       	brne	.-10     	; 0x3e <__SP_H__>

00000048 <__do_clear_bss>:
  48:	10 e0       	ldi	r17, 0x00	; 0
  4a:	a0 e6       	ldi	r26, 0x60	; 96
  4c:	b0 e0       	ldi	r27, 0x00	; 0
  4e:	01 c0       	rjmp	.+2      	; 0x52 <.do_clear_bss_start>

00000050 <.do_clear_bss_loop>:
  50:	1d 92       	st	X+, r1

00000052 <.do_clear_bss_start>:
  52:	a0 36       	cpi	r26, 0x60	; 96
  54:	b1 07       	cpc	r27, r17
  56:	e1 f7       	brne	.-8      	; 0x50 <.do_clear_bss_loop>
  58:	02 d0       	rcall	.+4      	; 0x5e <main>
  5a:	33 c0       	rjmp	.+102    	; 0xc2 <_exit>

0000005c <__bad_interrupt>:
  5c:	d1 cf       	rjmp	.-94     	; 0x0 <__vectors>

0000005e <main>:

#include <avr/io.h>

int main(void)
{
 DDRB=0xff;
  5e:	8f ef       	ldi	r24, 0xFF	; 255
  60:	87 bb       	out	0x17, r24	; 23
 DDRD=0x00;   
  62:	11 ba       	out	0x11, r1	; 17
	while(1)
    {
       a=PIND&0b00001111;
	  if (a==0b00000100)
	  {
		  PORTB=0b00001010;
  64:	2a e0       	ldi	r18, 0x0A	; 10
	  {
		  PORTB=0b00000110;
	  }
	  else if (a==0b00000011)
	  {
		  PORTB=0b00001001;
  66:	79 e0       	ldi	r23, 0x09	; 9
	  {
		  PORTB=0b00000101;
	  }
	  else if (a==0b00001101)
	  {
		  PORTB=0b00000110;
  68:	66 e0       	ldi	r22, 0x06	; 6
	  {
		  PORTB=0b00001000;
	  }
	  else if (a==0b00000001)
	  {
		  PORTB=0b00000101;
  6a:	55 e0       	ldi	r21, 0x05	; 5
	  {
		  PORTB=0x00;
	  }
	  else if (a==0b00000110)
	  {
		  PORTB=0b00001000;
  6c:	48 e0       	ldi	r20, 0x08	; 8
	  {
		  PORTB=0b00001010;
	  }
	  else if (a==0b00000010)
	  {
		  PORTB=0b00000010;
  6e:	32 e0       	ldi	r19, 0x02	; 2
 DDRD=0x00;   
 int a;
	
	while(1)
    {
       a=PIND&0b00001111;
  70:	80 b3       	in	r24, 0x10	; 16
  72:	90 e0       	ldi	r25, 0x00	; 0
  74:	8f 70       	andi	r24, 0x0F	; 15
  76:	90 70       	andi	r25, 0x00	; 0
	  if (a==0b00000100)
  78:	84 30       	cpi	r24, 0x04	; 4
  7a:	91 05       	cpc	r25, r1
  7c:	11 f4       	brne	.+4      	; 0x82 <main+0x24>
	  {
		  PORTB=0b00001010;
  7e:	28 bb       	out	0x18, r18	; 24
  80:	f7 cf       	rjmp	.-18     	; 0x70 <main+0x12>
	  }
	  else if (a==0b00000010)
  82:	82 30       	cpi	r24, 0x02	; 2
  84:	91 05       	cpc	r25, r1
  86:	11 f4       	brne	.+4      	; 0x8c <main+0x2e>
	  {
		  PORTB=0b00000010;
  88:	38 bb       	out	0x18, r19	; 24
  8a:	f2 cf       	rjmp	.-28     	; 0x70 <main+0x12>
	  }
	  else if (a==0b00001010)
  8c:	8a 30       	cpi	r24, 0x0A	; 10
  8e:	91 05       	cpc	r25, r1
  90:	11 f4       	brne	.+4      	; 0x96 <main+0x38>
	  {
		  PORTB=0x00;
  92:	18 ba       	out	0x18, r1	; 24
  94:	ed cf       	rjmp	.-38     	; 0x70 <main+0x12>
	  }
	  else if (a==0b00000110)
  96:	86 30       	cpi	r24, 0x06	; 6
  98:	91 05       	cpc	r25, r1
  9a:	11 f4       	brne	.+4      	; 0xa0 <main+0x42>
	  {
		  PORTB=0b00001000;
  9c:	48 bb       	out	0x18, r20	; 24
  9e:	e8 cf       	rjmp	.-48     	; 0x70 <main+0x12>
	  }
	  else if (a==0b00000001)
  a0:	81 30       	cpi	r24, 0x01	; 1
  a2:	91 05       	cpc	r25, r1
  a4:	11 f4       	brne	.+4      	; 0xaa <main+0x4c>
	  {
		  PORTB=0b00000101;
  a6:	58 bb       	out	0x18, r21	; 24
  a8:	e3 cf       	rjmp	.-58     	; 0x70 <main+0x12>
	  }
	  else if (a==0b00001101)
  aa:	8d 30       	cpi	r24, 0x0D	; 13
  ac:	91 05       	cpc	r25, r1
  ae:	11 f4       	brne	.+4      	; 0xb4 <main+0x56>
	  {
		  PORTB=0b00000110;
  b0:	68 bb       	out	0x18, r22	; 24
  b2:	de cf       	rjmp	.-68     	; 0x70 <main+0x12>
	  }
	  else if (a==0b00000011)
  b4:	83 30       	cpi	r24, 0x03	; 3
  b6:	91 05       	cpc	r25, r1
  b8:	11 f4       	brne	.+4      	; 0xbe <main+0x60>
	  {
		  PORTB=0b00001001;
  ba:	78 bb       	out	0x18, r23	; 24
  bc:	d9 cf       	rjmp	.-78     	; 0x70 <main+0x12>
	  }
      else
      {
	     PORTB=0x00;
  be:	18 ba       	out	0x18, r1	; 24
  c0:	d7 cf       	rjmp	.-82     	; 0x70 <main+0x12>

000000c2 <_exit>:
  c2:	f8 94       	cli

000000c4 <__stop_program>:
  c4:	ff cf       	rjmp	.-2      	; 0xc4 <__stop_program>
